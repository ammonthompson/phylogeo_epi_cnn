<beast version='2.0' namespace='master:master.model:master.steppers:master.conditions:master.postprocessors:master.outputs'>

<run spec='InheritanceEnsemble'
		verbosity='1'
		nTraj='1'
		samplePopulationSizes="true" 
		simulationTime='4'
		maxConditionRejects='20'>

<model spec='Model'>
	<populationType spec='PopulationType' typeName='S' id='S' dim='3'/>
 	<populationType spec='PopulationType' typeName='I' id='I' dim='3'/>
	<populationType spec='PopulationType' typeName='R' id='R'/>


<reactionGroup spec='ReactionGroup' reactionGroupName='Infection'>
 <reaction spec='Reaction' reactionName="Infection" rate="0.002"> 
 	S[0] + I[0]:1 -> 2I[0]:1 
 </reaction>
 <reaction spec='Reaction' reactionName="Infection" rate="0.002"> 
 	S[1] + I[1]:1 -> 2I[1]:1 
 </reaction>
 <reaction spec='Reaction' reactionName="Infection" rate="0.002"> 
 	S[2] + I[2]:1 -> 2I[2]:1 
 </reaction>
</reactionGroup>

<reactionGroup spec='ReactionGroup' reactionGroupName='Migration'>
<reaction spec='Reaction' reactionName="Migration" rate="0.00999985"> 
 	I[0] -> I[1] 
 </reaction>
<reaction spec='Reaction' reactionName="Migration" rate="0.01000007"> 
 	I[0] -> I[2] 
 </reaction>
<reaction spec='Reaction' reactionName="Migration" rate="0.00999985"> 
 	I[1] -> I[0] 
 </reaction>
<reaction spec='Reaction' reactionName="Migration" rate="0.01000007"> 
 	I[1] -> I[2] 
 </reaction>
<reaction spec='Reaction' reactionName="Migration" rate="0.01000007"> 
 	I[2] -> I[0] 
 </reaction>
<reaction spec='Reaction' reactionName="Migration" rate="0.01000007"> 
 	I[2] -> I[1] 
 </reaction>
</reactionGroup>

<reactionGroup spec='ReactionGroup' reactionGroupName='Sample_recovery'>
<reaction spec='Reaction' reactionName="Sample_recovery" rate="0.1"> 
 	I[0] -> R 
 </reaction>
<reaction spec='Reaction' reactionName="Sample_recovery" rate="0.1"> 
 	I[1] -> R 
 </reaction>
<reaction spec='Reaction' reactionName="Sample_recovery" rate="0.5"> 
 	I[2] -> R 
 </reaction>
</reactionGroup>

<reactionGroup spec='ReactionGroup' reactionGroupName='Recovery'>
<reaction spec='Reaction' reactionName="Recovery" rate="10"> 
 	I[0] -> R 
 </reaction>
<reaction spec='Reaction' reactionName="Recovery" rate="10"> 
 	I[1] -> R 
 </reaction>
<reaction spec='Reaction' reactionName="Recovery" rate="10"> 
 	I[2] -> R 
 </reaction>
</reactionGroup>
</model>

<initialState spec='InitState'>
<populationSize spec='PopulationSize' size='10000'>
	 <population spec='Population' type='@S' location="0"/>
</populationSize>
<populationSize spec='PopulationSize' size='10000'>
	 <population spec='Population' type='@S' location="1"/>
</populationSize>
<populationSize spec='PopulationSize' size='10000'>
	 <population spec='Population' type='@S' location="2"/>
</populationSize>
<lineageSeedMultiple spec='MultipleIndividuals' copies='0' >
	<population spec='Population' type='@I' location='0'/>
</lineageSeedMultiple>
<lineageSeedMultiple spec='MultipleIndividuals' copies='0' >
	<population spec='Population' type='@I' location='1'/>
</lineageSeedMultiple>
<lineageSeedMultiple spec='MultipleIndividuals' copies='1' >
	<population spec='Population' type='@I' location='2'/>
</lineageSeedMultiple>
</initialState>

<lineageEndCondition spec='LineageEndCondition' 
 nLineages="50000" alsoGreaterThan="true" isRejection="false"/>
<lineageEndCondition spec='LineageEndCondition'
 nLineages="0" alsoGreaterThan="false" isRejection="false">
	<population spec='Population' type='@I' location="0"/>
	<population spec='Population' type='@I' location="1"/>
	<population spec='Population' type='@I' location="2"/>
</lineageEndCondition>

<inheritancePostProcessor spec='LineageFilter' 
 reactionName="Sample_recovery" 
 reverseTime="false" 
 discard="false" 
 leavesOnly="false" 
 noClean="false" />

<postSimCondition spec='LeafCountPostSimCondition' 
 nLeaves="5" 
 exact="false" 
 exceedCondition="true"/>

<output spec='NewickOutput' fileName="adsf.newick" />
<output spec='NexusOutput' fileName="adsf.nexus" />
<output spec='JsonOutput' fileName="adsf.json" />
</run>
</beast>
